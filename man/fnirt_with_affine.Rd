% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fnirt.R
\name{fnirt_with_affine}
\alias{fnirt_with_affine}
\title{Register using FNIRT, but doing Affine Registration as well}
\usage{
fnirt_with_affine(
  infile,
  reffile,
  flirt.omat = NULL,
  flirt.outfile = NULL,
  outfile = NULL,
  retimg = TRUE,
  reorient = FALSE,
  intern = FALSE,
  flirt.opts = "",
  opts = "",
  verbose = TRUE,
  ...
)
}
\arguments{
\item{infile}{(character) input filename}

\item{reffile}{(character) reference image to be registered to}

\item{flirt.omat}{(character) Filename of output affine matrix}

\item{flirt.outfile}{(character) Filename of output affine-registered image}

\item{outfile}{(character) output filename}

\item{retimg}{(logical) return image of class nifti}

\item{reorient}{(logical) If retimg, should file be reoriented when read in?
Passed to \code{\link{readnii}}.}

\item{intern}{(logical) pass to \code{\link{system}}}

\item{flirt.opts}{(character) additional options to FLIRT}

\item{opts}{(character) additional options to FNIRT}

\item{verbose}{(logical) print out command before running}

\item{...}{additional arguments passed to \code{\link{readnii}}.}
}
\value{
character or logical depending on intern
}
\description{
This function calls \code{fnirt} to register infile to reffile
and either saves the image or returns an object of class nifti, but does
the affine registration first
}
